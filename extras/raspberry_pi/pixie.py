import time
import spidev
spi = spidev.SpiDev()

disp_buffer = []
pixie_count = 0
disp_count  = 0
cursor_pos  = 0
bright = 0b11111111

chars = {" ":[0,  0,  0,  0,  0], "$":[36,  42,  127,  42,  18], "(":[0,  28,  34,  65,  0], ", ":[0,  80,  48,  0,  0], "0":[62,  81,  73,  69,  62], "4":[24,  20,  18,  127,  16], "8":[54,  73,  73,  73,  54], "<":[0,  8,  20,  34,  65], "@":[50,  73,  121,  65,  62], "D":[127,  65,  65,  34,  28], "H":[127,  8,  8,  8,  127], "L":[127,  64,  64,  64,  64], "P":[127,  9,  9,  9,  6], "T":[1,  1,  127,  1,  1], "X":[99,  20,  8,  20,  99], "\\":[2,  4,  8,  16,  32], "`":[0,  1,  2,  4,  0], "d":[56,  68,  68,  72,  127], "h":[127,  8,  4,  4,  120], "l":[0,  65,  127,  64,  0], "p":[124,  20,  20,  20,  8], "t":[4,  63,  68,  64,  32], "x":[68,  40,  16,  40,  68], "|":[0,  0,  127,  0,  0], "#":[20,  127,  20,  127,  20], "'":[0,  5,  3,  0,  0], "+":[8,  8,  62,  8,  8], "/":[32,  16,  8,  4,  2], "3":[33,  65,  69,  75,  49], "7":[1,  113,  9,  5,  3], ";":[0,  86,  54,  0,  0], "?":[2,  1,  81,  9,  6], "C":[62,  65,  65,  65,  34], "G":[62,  65,  65,  81,  50], "K":[127,  8,  20,  34,  65], "O":[62,  65,  65,  65,  62], "S":[70,  73,  73,  73,  49], "W":[127,  32,  24,  32,  127], "[":[0,  0,  127,  65,  65], "_":[64,  64,  64,  64,  64], "c":[56,  68,  68,  68,  32], "g":[8,  20,  84,  84,  60], "k":[0,  127,  16,  40,  68], "o":[56,  68,  68,  68,  56], "s":[72,  84,  84,  84,  32], "w":[60,  64,  48,  64,  60], "{":[0,  8,  54,  65,  0], "\"":[0,  7,  0,  7,  0], "&":[54,  73,  85,  34,  80], "*":[8,  42,  28,  42,  8], ".":[0,  96,  96,  0,  0], "2":[66,  97,  81,  73,  70], "6":[60,  74,  73,  73,  48], ":":[0,  54,  54,  0,  0], ">":[65,  34,  20,  8,  0], "B":[127,  73,  73,  73,  54], "F":[127,  9,  9,  1,  1], "J":[32,  64,  65,  63,  1], "N":[127,  4,  8,  16,  127], "R":[127,  9,  25,  41,  70], "V":[31,  32,  64,  32,  31], "Z":[97,  81,  73,  69,  67], "^":[4,  2,  1,  2,  4], "b":[127,  72,  68,  68,  56], "f":[8,  126,  9,  1,  2], "j":[32,  64,  68,  61,  0], "n":[124,  8,  4,  4,  120], "r":[124,  8,  4,  4,  8], "v":[28,  32,  64,  32,  28], "z":[68,  100,  84,  76,  68], "~":[8,  8,  42,  28,  8], "!":[0,  0,  95,  0,  0], "%":[35,  19,  8,  100,  98], ")":[0,  65,  34,  28,  0], "-":[8,  8,  8,  8,  8], "1":[0,  66,  127,  64,  0], "5":[39,  69,  69,  69,  57], "9":[6,  73,  73,  41,  30], "=":[20,  20,  20,  20,  20], "A":[126,  17,  17,  17,  126], "E":[127,  73,  73,  73,  65], "I":[0,  65,  127,  65,  0], "M":[127,  2,  4,  2,  127], "Q":[62,  65,  81,  33,  94], "U":[63,  64,  64,  64,  63], "Y":[3,  4,  120,  4,  3], "]":[65,  65,  127,  0,  0], "a":[32,  84,  84,  84,  120], "e":[56,  84,  84,  84,  24], "i":[0,  68,  125,  64,  0], "m":[124,  4,  24,  4,  120], "q":[8,  20,  20,  24,  124], "u":[60,  64,  64,  32,  124], "y":[12,  80,  80,  80,  60], "}":[0,  65,  54,  8,  0]}
icons = {"PIX_ARROW_UP" : [0x04,0x02,0x7F,0x02,0x04],"PIX_ARROW_UP_LEFT" : [0x1E,0x06,0x0A,0x12,0x20],"PIX_ARROW_UP_RIGHT" : [0x20,0x12,0x0A,0x06,0x1E],"PIX_ARROW_DOWN" : [0x10,0x20,0x7F,0x20,0x10],"PIX_ARROW_DOWN_LEFT" : [0x3C,0x30,0x28,0x24,0x02],"PIX_ARROW_DOWN_RIGHT" : [0x02,0x24,0x28,0x30,0x3C],"PIX_ARROW_LEFT" : [0x08,0x1C,0x2A,0x08,0x08],"PIX_ARROW_RIGHT" : [0x08,0x08,0x2A,0x1C,0x08],"PIX_UNDO" : [0x24,0x2E,0x24,0x24,0x18],"PIX_REDO" : [0x18,0x24,0x24,0x2E,0x24],"PIX_REFRESH" : [0x1E,0x01,0x39,0x31,0x2E],"PIX_TRIANGLE_UP" : [0x10,0x18,0x1C,0x18,0x10],"PIX_TRIANGLE_DOWN" : [0x04,0x0C,0x1C,0x0C,0x04],"PIX_HEART" : [0x0C,0x12,0x24,0x12,0x0C],"PIX_SMILE" : [0x10,0x26,0x20,0x26,0x10],"PIX_FROWN" : [0x20,0x16,0x10,0x16,0x20],"PIX_HAPPY" : [0x16,0x22,0x20,0x22,0x16],"PIX_SAD" : [0x44,0x26,0x20,0x26,0x44],"PIX_ANGRY" : [0x49,0x2A,0x20,0x2A,0x49],"PIX_NO" : [0x1C,0x32,0x2A,0x26,0x1C],"PIX_DO_NOT_ENTER" : [0x1C,0x36,0x36,0x36,0x1C],"PIX_MAIL" : [0x3E,0x26,0x2A,0x26,0x3E],"PIX_PHONE_CALL" : [0x00,0x63,0x77,0x3E,0x00],"PIX_WIRELESS" : [0x12,0x49,0x69,0x49,0x12],"PIX_X_OUT" : [0x22,0x14,0x08,0x14,0x22],"PIX_CROSS" : [0x04,0x04,0x7F,0x04,0x04],"PIX_MEDIC_CROSS" : [0x1C,0x36,0x22,0x36,0x1C],"PIX_SQUARE" : [0x3E,0x22,0x22,0x22,0x3E],"PIX_TRIANGLE" : [0x30,0x28,0x24,0x28,0x30],"PIX_CIRCLE" : [0x1C,0x22,0x22,0x22,0x1C],"PIX_RECTANGLE" : [0x7F,0x41,0x41,0x41,0x7F],"PIX_EXPORT" : [0x74,0x42,0x5F,0x42,0x74],"PIX_SAVE" : [0x3E,0x22,0x2E,0x26,0x3C],"PIX_CLOCK" : [0x1C,0x22,0x2E,0x32,0x1C],"PIX_STOPWATCH" : [0x38,0x4D,0x77,0x45,0x38],"PIX_TV" : [0x7D,0x46,0x44,0x46,0x7D],"PIX_COPY" : [0x0F,0x39,0x29,0x2F,0x3C],"PIX_DOCUMENT" : [0x38,0x2C,0x2E,0x22,0x3E],"PIX_SMARTPHONE" : [0x3E,0x41,0x61,0x41,0x3E],"PIX_BLUETOOTH" : [0x14,0x08,0x7F,0x2A,0x14],"PIX_GPS_PIN" : [0x0E,0x11,0x65,0x11,0x0E],"PIX_STOCKS" : [0x60,0x10,0x20,0x18,0x06],"PIX_HOUSE" : [0x08,0x34,0x22,0x37,0x08],"PIX_FLOWER" : [0x00,0x17,0x7D,0x27,0x00],"PIX_MUSIC_NOTE" : [0x04,0x02,0x3F,0x70,0x20],"PIX_USB" : [0x18,0x20,0x7F,0x08,0x06],"PIX_MAGNIFYING_GLASS" : [0x0E,0x11,0x71,0x11,0x0E],"PIX_POWER" : [0x38,0x44,0x5E,0x44,0x38],"PIX_CONTACT" : [0x6E,0x71,0x71,0x71,0x6E],"PIX_CALENDAR" : [0x3E,0x26,0x26,0x26,0x3E],"PIX_WRENCH" : [0x06,0x7F,0x7C,0x7F,0x06],"PIX_POISON" : [0x52,0x25,0x25,0x25,0x52],"PIX_GAS" : [0x19,0x66,0x00,0x19,0x66],"PIX_TARGET" : [0x1C,0x22,0x2A,0x22,0x1C],"PIX_MALE" : [0x24,0x52,0x5F,0x52,0x24],"PIX_FEMALE" : [0x26,0x29,0x79,0x29,0x26],"PIX_RIBBON" : [0x46,0x29,0x11,0x29,0x46],"PIX_CAT" : [0x3E,0x54,0x64,0x54,0x3E],"PIX_BONE" : [0x63,0x7F,0x3E,0x7F,0x63],"PIX_EVIL_CORP" : [0x06,0x3E,0x38,0x3E,0x06],"PIX_RUDE" : [0x10,0x78,0x7E,0x78,0x30],"PIX_PADLOCK" : [0x78,0x4E,0x49,0x4E,0x78],"PIX_NFC" : [0x3F,0x42,0x14,0x21,0x7E],"PIX_SYNC" : [0x7F,0x20,0x14,0x02,0x7F],"PIX_INFO" : [0x3E,0x7F,0x45,0x7F,0x3E],"PIX_OHM" : [0x4E,0x71,0x01,0x71,0x4E],"PIX_ELECTRIC" : [0x0C,0x4E,0x2F,0x1B,0x09],"PIX_ANTENNA" : [0x03,0x05,0x7F,0x05,0x03],"PIX_RESISTOR_US" : [0x00,0x04,0x6B,0x10,0x00],"PIX_RESISTOR_EU" : [0x00,0x3E,0x63,0x3E,0x00],"PIX_CAPACITOR" : [0x14,0x14,0x77,0x14,0x14],"PIX_CAPACITOR_POL" : [0x24,0x14,0x77,0x14,0x24],"PIX_DIODE" : [0x24,0x34,0x6F,0x34,0x24],"PIX_ZENER" : [0x22,0x34,0x6F,0x34,0x28],"PIX_TRANSISTOR" : [0x08,0x3E,0x14,0x63,0x00],"PIX_FUSE" : [0x3E,0x22,0x7F,0x22,0x3E],"PIX_INDUCTOR" : [0x00,0x2A,0x6B,0x14,0x00],"PIX_SWITCH" : [0x00,0x73,0x04,0x08,0x00],"PIX_SQUARE_WAVE" : [0x0E,0x02,0x3E,0x20,0x38],"PIX_TRIANGLE_WAVE" : [0x08,0x04,0x08,0x10,0x08],"PIX_SAWTOOTH_WAVE" : [0x08,0x04,0x3E,0x10,0x08],"PIX_SINE_WAVE" : [0x0C,0x02,0x1C,0x20,0x18],"PIX_DC" : [0x14,0x04,0x14,0x04,0x14],"PIX_ARDUINO" : [0x08,0x14,0x08,0x14,0x08],"PIX_PLAY" : [0x3E,0x1C,0x1C,0x08,0x00],"PIX_PAUSE" : [0x3E,0x3E,0x00,0x3E,0x3E],"PIX_FORWARD" : [0x3E,0x1C,0x3E,0x1C,0x08],"PIX_REVERSE" : [0x08,0x1C,0x3E,0x1C,0x3E],"PIX_SKIP_FORWARD" : [0x3E,0x1C,0x08,0x3E,0x3E],"PIX_SKIP_BACK" : [0x3E,0x3E,0x08,0x1C,0x3E],"PIX_DICE_1" : [0x00,0x00,0x08,0x00,0x00],"PIX_DICE_2" : [0x20,0x00,0x00,0x00,0x02],"PIX_DICE_3" : [0x20,0x00,0x08,0x00,0x02],"PIX_DICE_4" : [0x22,0x00,0x00,0x00,0x22],"PIX_DICE_5" : [0x22,0x00,0x08,0x00,0x22],"PIX_DICE_6" : [0x2A,0x00,0x00,0x00,0x2A],"PIX_RAIN" : [0x30,0x48,0x44,0x42,0x3F],"PIX_SNOW" : [0x2A,0x08,0x36,0x08,0x2A],"PIX_SUNNY" : [0x2A,0x1C,0x3E,0x1C,0x2A],"PIX_CLOUDY" : [0x28,0x24,0x24,0x2B,0x13],"PIX_WINDY" : [0x28,0x2A,0x29,0x15,0x0A],"PIX_MOON" : [0x20,0x20,0x30,0x3E,0x1C],"PIX_D_QUOTE_LEFT" : [0x0E,0x0D,0x00,0x0E,0x0D],"PIX_D_QUOTE_RIGHT" : [0x0D,0x0E,0x00,0x0D,0x0E],"PIX_D_QUOTE_RIGHT_2" : [0x0B,0x07,0x00,0x0B,0x07],"PIX_D_QUOTE_L_UNDER" : [0x70,0x68,0x00,0x70,0x68],"PIX_D_QUOTE_R_UNDER" : [0x68,0x70,0x00,0x68,0x70],"PIX_QUOTE_LEFT" : [0x00,0x00,0x00,0x0E,0x0D],"PIX_QUOTE_RIGHT" : [0x0D,0x0E,0x00,0x00,0x00],"PIX_QUOTE_RIGHT_2" : [0x0B,0x07,0x00,0x00,0x00],"PIX_QUOTE_L_UNDER" : [0x00,0x00,0x00,0x70,0x68],"PIX_QUOTE_R_UNDER" : [0x68,0x70,0x00,0x00,0x00],"PIX_ANGLE_QUOTE_L" : [0x08,0x14,0x22,0x08,0x14],"PIX_ANGLE_QUOTE_R" : [0x14,0x08,0x22,0x14,0x08],"PIX_DEGREES" : [0x02,0x05,0x02,0x00,0x00],"PIX_BITCOIN" : [0x3E,0x6B,0x2A,0x6B,0x14],"PIX_CENTS" : [0x1C,0x22,0x63,0x22,0x14],"PIX_EURO" : [0x14,0x3E,0x55,0x55,0x41],"PIX_GBP" : [0x48,0x3E,0x49,0x49,0x42],"PIX_YUAN" : [0x01,0x2A,0x7C,0x2A,0x01],"PIX_RMB" : [0x44,0x3D,0x05,0x7D,0x44],"PIX_JPY" : [0x01,0x0A,0x7C,0x0A,0x01],"PIX_TRY" : [0x0A,0x7F,0x4A,0x20,0x10],"PIX_CHF" : [0x10,0x7F,0x15,0x15,0x05],"PIX_RUB" : [0x28,0x7F,0x29,0x29,0x06],"PIX_INR" : [0x15,0x15,0x15,0x2F,0x45],"PIX_MICRO" : [0x00,0x7C,0x20,0x20,0x1C],"PIX_PI" : [0x44,0x3C,0x04,0x7C,0x04],"PIX_COPYRIGHT" : [0x00,0x1C,0x14,0x14,0x00],"PIX_ELLIPSIS" : [0x20,0x00,0x20,0x00,0x20],"PIX_A_ACUTE" : [0x20,0x54,0x56,0x55,0x78],"PIX_A_CEDILLA" : [0x08,0x55,0x35,0x15,0x1E], "PIX_A_CIRCUMFLEX" : [0x20,0x56,0x55,0x56,0x78], "PIX_A_GRAVE" : [0x20,0x54,0x55,0x56,0x78],"PIX_A_MACRON" : [0x20,0x55,0x55,0x55,0x78],"PIX_A_OVERDOT" : [0x20,0x54,0x55,0x54,0x78], "PIX_A_TILDE" : [0x22,0x55,0x56,0x55,0x78], "PIX_A_UMLAUT" : [0x20,0x55,0x54,0x55,0x78], "PIX_E_ACUTE" : [0x38,0x56,0x55,0x54,0x18], "PIX_E_CEDILLA" : [0x0E,0x55,0x35,0x15,0x06], "PIX_E_CIRCUMFLEX" : [0x38,0x56,0x55,0x56,0x18], "PIX_E_GRAVE" : [0x38,0x54,0x55,0x56,0x18],"PIX_E_MACRON" : [0x38,0x55,0x55,0x55,0x18],"PIX_E_UMLAUT" : [0x38,0x55,0x54,0x55,0x18], "PIX_I_ACUTE" : [0x00,0x00,0x7A,0x01,0x00], "PIX_I_CIRCUMFLEX" : [0x00,0x02,0x79,0x02,0x00], "PIX_I_GRAVE" : [0x00,0x01,0x7A,0x00,0x00],"PIX_I_MACRON" : [0x00,0x02,0x7A,0x02,0x00], "PIX_I_UMLAUT" : [0x00,0x02,0x78,0x02,0x00], "PIX_O_ACUTE" : [0x38,0x44,0x46,0x45,0x38], "PIX_O_CIRCUMFLEX" : [0x38,0x46,0x45,0x46,0x38], "PIX_O_GRAVE" : [0x38,0x45,0x46,0x44,0x38],"PIX_O_MACRON" : [0x38,0x45,0x45,0x45,0x38], "PIX_O_TILDE" : [0x3A,0x45,0x46,0x45,0x38], "PIX_O_UMLAUT" : [0x38,0x45,0x44,0x45,0x38], "PIX_U_ACUTE" : [0x3C,0x40,0x42,0x21,0x7C], "PIX_U_CIRCUMFLEX" : [0x38,0x42,0x41,0x22,0x78], "PIX_U_GRAVE" : [0x3C,0x41,0x42,0x20,0x7C],"PIX_U_MACRON" : [0x3C,0x41,0x41,0x21,0x7C], "PIX_U_UMLAUT" : [0x3C,0x41,0x40,0x21,0x7C], "PIX_C_ACUTE" : [0x30,0x4A,0x49,0x48,0x00],"PIX_C_CARON" : [0x30,0x49,0x4A,0x49,0x00],"PIX_C_CEDILLA" : [0x0C,0x52,0x32,0x12,0x00],"PIX_L_CEDILLA" : [0x00,0x40,0x3F,0x00,0x00],"PIX_N_ACUTE" : [0x7C,0x08,0x06,0x05,0x78],"PIX_N_CEDILLA" : [0x1F,0x42,0x21,0x01,0x1E],"PIX_N_TILDE" : [0x7A,0x11,0x0A,0x09,0x70],"PIX_S_ACUTE" : [0x48,0x54,0x56,0x55,0x24],"PIX_S_CARON" : [0x48,0x55,0x56,0x55,0x24],"PIX_Y_UMLAUT" : [0x0C,0x51,0x50,0x51,0x3C], "PIX_Z_ACUTE" : [0x44,0x64,0x56,0x4D,0x44],"PIX_Z_CARON" : [0x44,0x65,0x56,0x4D,0x44],"PIX_Z_OVERDOT" : [0x44,0x64,0x55,0x4C,0x44],"PIX_ESZETT" : [0x7E,0x01,0x45,0x4A,0x30],"PIX_L_SLAVIC" : [0x20,0x10,0x7F,0x04,0x02],"PIX_ETH_UPPER" : [0x49,0x7F,0x49,0x41,0x3E],"PIX_ETH_LOWER" : [0x00,0x35,0x4A,0x4D,0x38],"PIX_THORN" : [0x7F,0x12,0x12,0x12,0x0C]}

def begin(num_pix):
	global disp_count
	spi.open(0,0)
	# SPI Settings
	spi.max_speed_hz = 20000 # increase or decrease speed if issues occur
	spi.mode = 0b01 # clock polarity and phase
	spi.no_cs = True # No CS pin needed

	pixie_count = num_pix
	disp_count = pixie_count*2
	total_bytes = disp_count*8
	for i in range(total_bytes):
		disp_buffer.append(0)

def delay(milliseconds):
	time.sleep(milliseconds/1000.0)

def show():
#	print("show()")
	spi.writebytes(disp_buffer)
	time.sleep(0.01)

def brightness(b):
	global disp_count
	global bright
	bright = b + 128;
	for i in range(disp_count):
		write_brightness(bright, i)

def write_brightness(br, pos):
	global disp_count
	global bright
	if pos < disp_count:
		write_col(0,      8*pos+0)
		write_col(br,     8*pos+1)
		write_col(0,      8*pos+2)

def write(input, pos = 0):
	if isinstance(input, list):
		write_icon(input[0],input[1],input[2],input[3],input[4], pos)
	else:
		input = str(input)
		length = len(input)

		for i in range(length):
			write_char(input[i], i+pos);

def write_icon(col1,col2,col3,col4,col5, pos = 0):
	write_col(0,      8*pos+0)
	write_col(bright, 8*pos+1)
	write_col(0,      8*pos+2)
	write_col(col1,  8*pos+3)
	write_col(col2,  8*pos+4)
	write_col(col3,  8*pos+5)
	write_col(col4,  8*pos+6)
	write_col(col5,  8*pos+7)

def write_col(col, pos):
#	print("write_col()")
	temp_col = col;
	try:
		disp_buffer[pos] = temp_col;
	except: # Off screen
		pass

def write_char(chr, pos):
#	print("write_char()")
	write_col(0,      8*pos+0)
	write_col(bright, 8*pos+1)
	write_col(0,      8*pos+2)
	write_col(chars[chr][0],  8*pos+3)
	write_col(chars[chr][1],  8*pos+4)
	write_col(chars[chr][2],  8*pos+5)
	write_col(chars[chr][3],  8*pos+6)
	write_col(chars[chr][4],  8*pos+7)

	set_cursor(pos+1)

def printout(input):
	global cursor_pos
	if isinstance(input, list):
		print_icon(input[0],input[1],input[2],input[3],input[4])
	else:
		input = str(input)
		pos = cursor_pos
		for item in input:
			print_char(item)

def print_char(chr):
	global cursor_pos
	pos = cursor_pos
	cursor_pos+=1

	write_col(0,      8*pos+0)
	write_col(bright, 8*pos+1)
	write_col(0,      8*pos+2)
	write_col(chars[chr][0],  8*pos+3)
	write_col(chars[chr][1],  8*pos+4)
	write_col(chars[chr][2],  8*pos+5)
	write_col(chars[chr][3],  8*pos+6)
	write_col(chars[chr][4],  8*pos+7)

def print_icon(col1,col2,col3,col4,col5):
	global cursor_pos
	pos = cursor_pos
	cursor_pos+=1

	write_col(0,      8*pos+0)
	write_col(bright, 8*pos+1)
	write_col(0,      8*pos+2)
	write_col(col1,  8*pos+3)
	write_col(col2,  8*pos+4)
	write_col(col3,  8*pos+5)
	write_col(col4,  8*pos+6)
	write_col(col5,  8*pos+7)

def push(input):
	if isinstance(input, list):
		push_icon(input[0],input[1],input[2],input[3],input[4])
	else:
		input = str(input)
		for item in input:
			push_char(item)

def push_char(chr):
	push_byte(0)
	push_byte(bright)
	push_byte(0)
	push_byte(chars[chr][0])
	push_byte(chars[chr][1])
	push_byte(chars[chr][2])
	push_byte(chars[chr][3])
	push_byte(chars[chr][4])

def push_icon(col1,col2,col3,col4,col5):
	push_byte(0)
	push_byte(bright)
	push_byte(0)
	push_byte(col1)
	push_byte(col2)
	push_byte(col3)
	push_byte(col4)
	push_byte(col5)

def push_byte(col):
	temp_col = col

	disp_buffer.pop(0)
	try:
		disp_buffer.append(temp_col)
	except:
		pass

def shift(input):
	if isinstance(input, list):
		shift_icon(input[0],input[1],input[2],input[3],input[4])
	else:
		input = str(input)
		input = input[::-1]
		for item in input:
			shift_char(item)

def shift_char(chr):
	shift_byte(chars[chr][4])
	shift_byte(chars[chr][3])
	shift_byte(chars[chr][2])
	shift_byte(chars[chr][1])
	shift_byte(chars[chr][0])
	shift_byte(0)
	shift_byte(bright)
	shift_byte(0)

def shift_icon(col1,col2,col3,col4,col5):
	shift_byte(col5)
	shift_byte(col4)
	shift_byte(col3)
	shift_byte(col2)
	shift_byte(col1)
	shift_byte(0)
	shift_byte(bright)
	shift_byte(0)

def shift_byte(col):
	temp_col = col;
	disp_buffer.insert(0, col)
	del disp_buffer[-1]

def scroll_message(input, wait_ms = 100, instant = False):
	global disp_count
	clear()
	input = str(input)
	length = len(input)

	hold_time = 1

	if instant == False:
		for c in range(length):
			chr = input[c]

			push_byte(0)
			show()
			delay(hold_time)
			push_byte(bright)
			show()
			delay(hold_time)
			push_byte(0)
			show()
			delay(hold_time)
			push_byte(chars[chr][0])
			show()
			delay(hold_time)
			push_byte(chars[chr][1])
			show()
			delay(hold_time)
			push_byte(chars[chr][2])
			show()
			delay(hold_time)
			push_byte(chars[chr][3])
			show()
			delay(hold_time)
			push_byte(chars[chr][4])
			show()
			delay(hold_time)

			delay(wait_ms)

		for i in range(disp_count):
			push_byte(0)
			show()
			delay(hold_time)
			push_byte(bright)
			show()
			delay(hold_time)
			push_byte(0)
			show()
			delay(hold_time)
			push_byte(0)
			show()
			delay(hold_time)
			push_byte(0)
			show()
			delay(hold_time)
			push_byte(0)
			show()
			delay(hold_time)
			push_byte(0)
			show()
			delay(hold_time)
			push_byte(0)
			show()
			delay(hold_time)

			delay(wait_ms)
	else:
		for c in range(length):
			chr = input[c];

			push_byte(0)
			push_byte(bright)
			push_byte(0)
			push_byte(chars[chr][0])
			push_byte(chars[chr][1])
			push_byte(chars[chr][2])
			push_byte(chars[chr][3])
			push_byte(chars[chr][4])
			show()
			delay(wait_ms)

		for i in range(disp_count):
			push_byte(0)
			push_byte(bright)
			push_byte(0)
			push_byte(0)
			push_byte(0)
			push_byte(0)
			push_byte(0)
			push_byte(0)
			show()
			delay(wait_ms)

def clear():
	global cursor_pos
#	print("clear()")
	for d in range(disp_count*8):
		disp_buffer[d] = 0;
	cursor_pos = 0;

def set_cursor(pos):
#	print("set_cursor()")
	cursor_pos = pos
